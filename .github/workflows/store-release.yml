name: Android Store Release (Auto)

on:
  workflow_dispatch: {}

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Java 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Bootstrap Android project if missing
        shell: bash
        run: |
          set -euo pipefail
          if [ ! -f "settings.gradle" ]; then
            mkdir -p app/src/main/java/com/satouta/assistant
            mkdir -p app/src/main/res/layout
            : > app/proguard-rules.pro

            # settings.gradle
            printf '%s\n' \
'pluginManagement {' \
'  repositories {' \
'    gradlePluginPortal()' \
'    google()' \
'    mavenCentral()' \
'  }' \
'}' \
'dependencyResolutionManagement {' \
'  repositoriesMode.set(RepositoriesMode.FAIL_ON_PROJECT_REPOS)' \
'  repositories {' \
'    google()' \
'    mavenCentral()' \
'  }' \
'}' \
'rootProject.name = "Satouta"' \
'include(":app")' \
> settings.gradle

            # build.gradle (root)
            printf '%s\n' \
'plugins {' \
'  id "com.android.application" version "8.5.2" apply false' \
'  id "org.jetbrains.kotlin.android" version "1.9.24" apply false' \
'}' \
> build.gradle

            # gradle.properties
            printf '%s\n' \
'org.gradle.jvmargs=-Xmx2g -Dfile.encoding=UTF-8' \
'android.useAndroidX=true' \
'kotlin.code.style=official' \
> gradle.properties

            # app/build.gradle
            printf '%s\n' \
'plugins {' \
'  id "com.android.application"' \
'  id "org.jetbrains.kotlin.android"' \
'}' \
'' \
'android {' \
'  namespace "com.satouta.assistant"' \
'  compileSdk 34' \
'' \
'  defaultConfig {' \
'    applicationId "com.satouta.assistant"' \
'    minSdk 26' \
'    targetSdk 34' \
'    versionCode 1' \
'    versionName "1.0"' \
'  }' \
'' \
'  buildTypes {' \
'    release {' \
'      minifyEnabled false' \
'      proguardFiles getDefaultProguardFile("proguard-android-optimize.txt"), "proguard-rules.pro"' \
'    }' \
'  }' \
'' \
'  buildFeatures {' \
'    viewBinding true' \
'  }' \
'}' \
'' \
'dependencies {' \
'  implementation "org.jetbrains.kotlin:kotlin-stdlib:1.9.24"' \
'  implementation "androidx.core:core-ktx:1.13.1"' \
'  implementation "androidx.appcompat:appcompat:1.7.0"' \
'  implementation "com.google.android.material:material:1.12.0"' \
'  implementation "androidx.activity:activity-ktx:1.9.2"' \
'  implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.8.1"' \
'}' \
> app/build.gradle

            # AndroidManifest.xml
            printf '%s\n' \
'<?xml version="1.0" encoding="utf-8"?>' \
'<manifest xmlns:android="http://schemas.android.com/apk/res/android" package="com.satouta.assistant">' \
'    <uses-permission android:name="android.permission.RECORD_AUDIO"/>' \
'    <application' \
'        android:label="Satouta"' \
'        android:allowBackup="true"' \
'        android:supportsRtl="true"' \
'        android:theme="@style/Theme.Material3.DayNight.NoActionBar">' \
'        <activity android:name=".MainActivity">' \
'            <intent-filter>' \
'                <action android:name="android.intent.action.MAIN"/>' \
'                <category android:name="android.intent.category.LAUNCHER"/>' \
'            </intent-filter>' \
'        </activity>' \
'    </application>' \
'</manifest>' \
> app/src/main/AndroidManifest.xml

            # layout
            printf '%s\n' \
'<?xml version="1.0" encoding="utf-8"?>' \
'<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"' \
'    android:orientation="vertical"' \
'    android:padding="24dp"' \
'    android:gravity="center"' \
'    android:layout_width="match_parent"' \
'    android:layout_height="match_parent">' \
'' \
'    <TextView' \
'        android:id="@+id/status"' \
'        android:text="Satouta is ready"' \
'        android:textSize="18sp"' \
'        android:layout_width="wrap_content"' \
'        android:layout_height="wrap_content"/>' \
'' \
'    <Button' \
'        android:id="@+id/btnTalk"' \
'        android:text="Press & Talk"' \
'        android:layout_marginTop="24dp"' \
'        android:layout_width="wrap_content"' \
'        android:layout_height="wrap_content"/>' \
'</LinearLayout>' \
> app/src/main/res/layout/activity_main.xml

            # MainActivity.kt
            printf '%s\n' \
'package com.satouta.assistant' \
'' \
'import android.Manifest' \
'import android.content.pm.PackageManager' \
'import android.os.Bundle' \
'import android.widget.Button' \
'import android.widget.TextView' \
'import androidx.activity.ComponentActivity' \
'import androidx.activity.result.contract.ActivityResultContracts' \
'import androidx.core.content.ContextCompat' \
'import androidx.lifecycle.lifecycleScope' \
'import kotlinx.coroutines.launch' \
'' \
'class MainActivity : ComponentActivity() {' \
'    private lateinit var status: TextView' \
'    private lateinit var btnTalk: Button' \
'' \
'    private val micPermission = registerForActivityResult(' \
'        ActivityResultContracts.RequestPermission()' \
'    ) { granted ->' \
'        if (!granted) status.text = "Microphone permission denied"' \
'    }' \
'' \
'    override fun onCreate(savedInstanceState: Bundle?) {' \
'        super.onCreate(savedInstanceState)' \
'        setContentView(R.layout.activity_main)' \
'        status = findViewById(R.id.status)' \
'        btnTalk = findViewById(R.id.btnTalk)' \
'' \
'        btnTalk.setOnClickListener {' \
'            ensureMic()' \
'            lifecycleScope.launch {' \
'                status.text = "Listening..."' \
'            }' \
'        }' \
'    }' \
'' \
'    private fun ensureMic() {' \
'        if (ContextCompat.checkSelfPermission(this, Manifest.permission.RECORD_AUDIO)' \
'            != PackageManager.PERMISSION_GRANTED) {' \
'            micPermission.launch(Manifest.permission.RECORD_AUDIO)' \
'        }' \
'    }' \
'}' \
> app/src/main/java/com/satouta/assistant/MainActivity.kt
          fi

      - name: Build AAB
        uses: gradle/gradle-build-action@v3
        with:
          gradle-version: 8.7
          arguments: ':app:bundleRelease --stacktrace'

      - name: Locate AAB
        id: out
        shell: bash
        run: |
          set -euo pipefail
          AAB=""
          for f in app/build/outputs/bundle/release/*.aab app/build/outputs/bundle/*/*.aab; do
            if [ -f "$f" ]; then AAB="$f"; break; fi
          done
          if [ -z "$AAB" ]; then
            ls -R app/build/outputs || true
            exit 1
          fi
          echo "AAB=$AAB" >> "$GITHUB_OUTPUT"

      - name: Upload AAB
        uses: actions/upload-artifact@v4
        with:
          name: app-store-release.aab
          path: ${{ steps.out.outputs.AAB }}
