jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - uses: android-actions/setup-android@v3

      # ‚úÖ ÿ¥ŸàŸÅ ÿßÿ≠ŸÜÿß ŸàÿßŸÇŸÅŸäŸÜ ŸÅŸäŸÜ Ÿàÿßÿ∑ÿ®ÿπ ÿßŸÑŸÖŸÑŸÅÿßÿ™
      - name: Debug ‚Äì where am I?
        run: |
          pwd
          ls -la
          echo "----- repo tree (top) -----"
          ls -la .
          echo "----- gradle dir -----"
          ls -la gradle || true

      # ‚úÖ ŸÑŸà gradlew ŸÖÿ¥ ŸÖŸàÿ¨ŸàÿØÿå ÿ®ŸÜÿπŸÖŸÑŸá ÿ™ŸÑŸÇÿßÿ¶ŸäÿßŸã
      - name: Ensure Gradle wrapper (8.7) if missing
        shell: bash
        run: |
          set -euo pipefail
          if [ ! -f "./gradlew" ]; then
            echo "Gradle wrapper missing‚Ä¶ bootstrapping"
            WRAP_VER=8.7
            mkdir -p gradle/wrapper
            cat > gradle/wrapper/gradle-wrapper.properties <<EOF
            distributionBase=GRADLE_USER_HOME
            distributionPath=wrapper/dists
            distributionUrl=https\://services.gradle.org/distributions/gradle-${WRAP_VER}-bin.zip
            zipStoreBase=GRADLE_USER_HOME
            zipStorePath=wrapper/dists
            EOF
            curl -fsSL https://repo1.maven.org/maven2/org/gradle/gradle-wrapper/${WRAP_VER}/gradle-wrapper-${WRAP_VER}.jar \
              -o gradle/wrapper/gradle-wrapper.jar
            cat > gradlew <<'EOF'
            #!/usr/bin/env sh
            DIR="$(cd "$(dirname "$0")" && pwd)"
            JAVA_EXE="${JAVA_HOME}/bin/java"
            if [ ! -x "$JAVA_EXE" ]; then JAVA_EXE="$(command -v java)"; fi
            exec "$JAVA_EXE" -Dorg.gradle.appname=gradlew -classpath "$DIR/gradle/wrapper/gradle-wrapper.jar" org.gradle.wrapper.GradleWrapperMain "$@"
            EOF
            chmod +x gradlew
          else
            echo "Gradle wrapper already present ‚úÖ"
          fi
          ls -la gradlew gradle/wrapper || true

      # üîê ÿÆÿ∑Ÿàÿ© ÿßŸÑŸÉŸä ÿ≥ÿ™Ÿàÿ± (ÿ≤Ÿä ŸÖÿß ŸáŸä)
      - name: Prepare keystore
        env:
          KS_B64: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}
        run: |
          set -euo pipefail
          if [ -n "${KS_B64:-}" ]; then
            echo "$KS_B64" | base64 -d > "$GITHUB_WORKSPACE/release.jks"
            echo "ANDROID_KEYSTORE=$GITHUB_WORKSPACE/release.jks" >> "$GITHUB_ENV"
            echo "Keystore decoded."
          else
            echo "No ANDROID_KEYSTORE_BASE64 provided ‚Äî proceeding unsigned."
          fi

      # üèóÔ∏è ÿßŸÑÿ®ŸÜÿßÿ°
      - name: Build AAB (auto)
        env:
          ANDROID_KEYSTORE: ${{ env.ANDROID_KEYSTORE }}
          ANDROID_KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
          ANDROID_KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}
          ANDROID_KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}
        run: |
          set -euo pipefail
          chmod +x ./gradlew
          if ./gradlew :app:tasks --all | grep -q "^bundleStoreRelease"; then
            TASK=":app:bundleStoreRelease"
          else
            TASK=":app:bundleRelease"
          fi
          echo "Using task: $TASK"
          ./gradlew $TASK --stacktrace --no-daemon
